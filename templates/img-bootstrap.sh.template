{{.NeedsRoot}}
# Bootstrap (customize) an already initialized FreeBSD {{.Release}} image for jail deployment
# Start bootstrap from vanilla snapshot (fails if jails depend on a snapshot newer than vanilla)
zfs rollback -r {{.Dataset}}@vanilla
{{.CheckResult}}
mount -t devfs none {{.Path}}/dev # Mount chroot devfs (needed for chroot commands to work)
{{.CheckResult}}
devfs -m {{.Path}}/dev rule -s 4 applyset # Apply devfs ruleset 4 to chroot devfs
{{.CheckResult}}

chroot {{.Path}} pkg bootstrap # Bootstrap the pkg binary package manager
{{if .Bootstrap.Packages}}
chroot {{.Path}} pkg install {{range .Bootstrap.Packages}}{{.}} {{end}} # Install packages
{{end}}

{{$path := .Path}}
{{if .Bootstrap.User}}
# NOTE: I don't know why pw can't locate the shell on its own here (-s line)
{{range .Bootstrap.User}}
# Create user {{.Username}}
chroot {{$path}} pw useradd -n {{.Username}} \
	{{if .Uid}}-u {{.Uid}}{{end}} \
	{{if .LoginGroup}}-g {{.LoginGroup}}{{end}} \
	{{if .Groups}}-G {{range .Groups}}{{.}},{{end}}{{end}} \
	{{if .LoginClass}}-L {{.LoginClass}}{{end}} \
	{{if .Shell}}-s `which {{.Shell}}`{{end}} \
	{{if .CreateHome}}-m \
	-d {{.HomeDir}} \
	-M {{.HomePermString}}{{end}} \
	-w no # Don't set user password, this will be done later on during jail bootstrapping
# Lock user {{.Username}}
chroot {{$path}} pw lock {{.Username}}
{{$homedir := .HomeDir}}
{{$username := .Username}}
# Install user files
{{range .Files}}
cp {{.}} {{$path}}/{{$homedir}}
chroot {{$path}} chown -R {{$username}}:{{$username}} {{$homedir}}/{{.}}
{{end}}
{{end}}
{{end}}

# Unmount chroot devfs
umount {{.Path}}/dev

# Snapshot bootstrapped image
zfs snapshot {{.Dataset}}@{{.Snapshot}}
