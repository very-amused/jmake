{{.NeedsRoot}}
# Bootstrap (customize) an initialized jail
# Start bootstrap from vanilla snapshot (fails if jail has a snapshot newer than vanilla)
zfs rollback {{.Dataset}}@vanilla
{{.CheckResult}}
mount -t devfs none {{.Path}}/dev # Mount jail devfs (needed for chroot commands to work)
{{.CheckResult}}
devfs -m {{.Path}}/dev rule -s 4 applyset # Apply devfs ruleset 4 to jail devfs
{{.CheckResult}}

freebsd-update -b {{.Path}}/ fetch install # Update system packages
chroot {{.Path}} pkg bootstrap # Bootstrap the pkg binary package manager
chroot {{.Path}} pkg update # Update pkg repos
chroot {{.Path}} pkg upgrade # Update binary packages

{{if and .Bootstrap .Bootstrap.Packages}}
chroot {{.Path}} pkg install {{range .Bootstrap.Packages}}{{.}} {{end}} # Install packages
{{end}}

# Lock root account or set root passwd
while [ -z "${lock_root}" ]; do
	read -p 'Lock root account? (yes/no) [no]: ' lock_root
done
if [ "${lock_root}" = 'yes' ]; then
	chroot {{.Path}} pw lock root
else
	echo 'Set root password for jail {{.Name}}:'
	chroot {{.Path}} passwd
fi

{{$path := .Path}}
{{$jailname := .Name}}
# Finish bootstrapping users from the image's bootstrap config
{{if and .Img .Img.Bootstrap .Img.Bootstrap.User}}
{{range .Img.Bootstrap.User}}
echo 'Set password for {{.Username}}@{{$jailname}}:'
chroot {{$path}} pw unlock {{.Username}}
chroot {{$path}} passwd {{.Username}}
{{end}}
{{end}}

# Bootstrap users in the jail's bootstrap config
{{if and .Bootstrap .Bootstrap.User}}
{{range .Bootstrap.User}}
# Create user {{.Username}}
chroot {{$path}} pw useradd -n {{.Username}} \
	{{if .Uid}}-u {{.Uid}}{{end}} \
	{{if .LoginGroup}}-g {{.LoginGroup}}{{end}} \
	{{if .Groups}}-G {{range .Groups}}{{.}},{{end}}{{end}} \
	{{if .LoginClass}}-L {{.LoginClass}}{{end}} \
	{{if .Shell}}-s `which {{.Shell}}`{{end}} \
	{{if .CreateHome}}-m \
	-d {{.HomeDir}} \
	-M {{.HomePermString}}{{end}} \
	-w no # Don't set user password. This will be done next with the passwd command
echo 'Set password for {{.Username}}@{{$jailname}}:'
chroot {{$path}} passwd {{.Username}}
{{end}}
{{end}}

# Unmount jail devfs
umount {{.Path}}/dev
